package netgloo.models;
// Generated Aug 25, 2017 1:26:26 AM by Hibernate Tools 5.2.3.Final

import static javax.persistence.GenerationType.IDENTITY;

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import org.hibernate.search.annotations.Field;
import org.hibernate.search.annotations.Indexed;
import org.hibernate.search.annotations.IndexedEmbedded;

/**
 * Users generated by hbm2java
 */
@Entity
@Indexed
@Table(name = "users")
public class Users {

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	private Long id;
	
	@Field
	@Column(name = "city", nullable = false)
	private String city;
	
	@Field
	@Column(name = "email", nullable = false)
	private String email;
	
	@Field
	@Column(name = "name", nullable = false)
	private String name;
	
	@OneToMany(fetch = FetchType.EAGER, mappedBy = "users")
	@IndexedEmbedded(includePaths = { "subName" })
	private Set<SubUsers> subUserses = new HashSet<SubUsers>(0);

	public Users() {
	}

	public Users(String city, String email, String name) {
		this.city = city;
		this.email = email;
		this.name = name;
	}

	public Users(String city, String email, String name, Set<SubUsers> subUserses) {
		this.city = city;
		this.email = email;
		this.name = name;
		this.subUserses = subUserses;
	}

	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	public String getCity() {
		return this.city;
	}

	public void setCity(String city) {
		this.city = city;
	}
	
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public Set<SubUsers> getSubUserses() {
		return this.subUserses;
	}

	public void setSubUserses(Set<SubUsers> subUserses) {
		this.subUserses = subUserses;
	}

}
